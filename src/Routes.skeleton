<?hh // strict

use kilahm\AttributeRouter\Route;

/**
 * If you would like to define some routes without using attributes, put them in this file.
 */

final class Routes
{
    <<provides('\Routes', 'routes')>>
    public static function factory(@@@tcontainer@@@ $container) : Routes
    {
        return new static($container, $container->getAutoRoutes());
    }

    public function __construct(private @@@tcontainer@@@ $container, private AutoRoutes $auto)
    {
    }

    public function getContainer() : @@@tcontainer@@@
    {
        return $this->container;
    }

    public function get() : Vector<Route>
    {
        return $this->auto->get()->addAll(Vector
        {
        /*
        shape(
            'pattern' => '/some regex here/',
            'method' => class_meth('\full\path\to\class', 'methodName'),
        ),
        shape(
            ...
        ),
        ...
        */
        });
    }

    public function put() : Vector<Route>
    {
        return $this->auto->put()->addAll(Vector
        {
        });
    }

    public function delete() : Vector<Route>
    {
        return $this->auto->delete()->addAll(Vector
        {
        });
    }

    public function post() : Vector<Route>
    {
        return $this->auto->post()->addAll(Vector
        {
        });
    }

    public function any() : Vector<Route>
    {
        return $this->auto->any()->addAll(Vector
        {
        });
    }
}
