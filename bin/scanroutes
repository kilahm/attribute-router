#! /usr/bin/env hhvm
<?hh

if(substr(php_sapi_name(), 0, 3) !== 'cli'){
    http_response_code(404);
    exit();
}

// Find the composer autoloader
$basedir = __DIR__;

do {
    if(file_exists($basedir . '/composer.json') && file_exists($basedir . '/vendor/autoload.php')){
        require_once($basedir . '/vendor/autoload.php');
        break;
    }
    $basedir = dirname($basedir);
    if($basedir === '/'){
        exit('You need to set up the project dependencies using the following commands:' . PHP_EOL .
            'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
            'php composer.phar install' . PHP_EOL);
    }
} while(true);

chdir($basedir);

use kilahm\AttributeRouter\RouteCompiler;
use kilahm\Clio\Clio;

$clio = Clio::fromCli();

$clio->arg('path')
    ->describedAs('Base path to search for route attributes.  The directory will be searched recursively.');

$installPathOpt = $clio->opt('install-to')->aka('i')
    ->describedAs('Path to install Routes.php and AutoRoutes.php')
    ->withDefault($basedir)
    ->isPath();

$excludeOpt = $clio->opt('exclude')->aka('e')->aka('without')
    ->describedAs('Space delimited paths to ignore while compiling. You must quote the entire list if you include a space.');

$include = $clio->getArgVals()->toSet();

$exclude = Set::fromItems(explode(' ', $excludeOpt->getVal()));

echo 'Compiling routes to ' . $installPathOpt->getVal() . PHP_EOL;
RouteCompiler::factory($include, $exclude)->compile($installPathOpt->getVal());
